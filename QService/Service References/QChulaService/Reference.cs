//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QService.QChulaService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QChulaService.WS_KioskQSoap")]
    public interface WS_KioskQSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/CreateQ_NoHNRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/CreateQ_NoHNResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateQ_NoHN(string p_slip_type_detail, string p_slip_type_flag, string p_kiosk_location_desc, string p_slip_no, string p_crtd_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/CreateQ_NoHNRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/CreateQ_NoHNResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateQ_NoHNAsync(string p_slip_type_detail, string p_slip_type_flag, string p_kiosk_location_desc, string p_slip_no, string p_crtd_by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/UpdateQ_ClickStatusQ_NurseRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/UpdateQ_ClickStatusQ_NurseResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateQ_ClickStatusQ_Nurse(string q_no, string q_status, string status_clinic_scanning, string status_send_clinic, string nurse_channel_comp_id, string nurse_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/UpdateQ_ClickStatusQ_NurseRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/UpdateQ_ClickStatusQ_NurseResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdateQ_ClickStatusQ_NurseAsync(string q_no, string q_status, string status_clinic_scanning, string status_send_clinic, string nurse_channel_comp_id, string nurse_user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/UpdateQ_SlipSeqRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/UpdateQ_SlipSeqResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UpdateQ_SlipSeq(string p_q_id, string p_slip_seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WS_KioskQSoap/UpdateQ_SlipSeqRequest", ReplyAction="http://tempuri.org/WS_KioskQSoap/UpdateQ_SlipSeqResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> UpdateQ_SlipSeqAsync(string p_q_id, string p_slip_seq);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WS_KioskQSoapChannel : QService.QChulaService.WS_KioskQSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WS_KioskQSoapClient : System.ServiceModel.ClientBase<QService.QChulaService.WS_KioskQSoap>, QService.QChulaService.WS_KioskQSoap {
        
        public WS_KioskQSoapClient() {
        }
        
        public WS_KioskQSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WS_KioskQSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_KioskQSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_KioskQSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet CreateQ_NoHN(string p_slip_type_detail, string p_slip_type_flag, string p_kiosk_location_desc, string p_slip_no, string p_crtd_by) {
            return base.Channel.CreateQ_NoHN(p_slip_type_detail, p_slip_type_flag, p_kiosk_location_desc, p_slip_no, p_crtd_by);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateQ_NoHNAsync(string p_slip_type_detail, string p_slip_type_flag, string p_kiosk_location_desc, string p_slip_no, string p_crtd_by) {
            return base.Channel.CreateQ_NoHNAsync(p_slip_type_detail, p_slip_type_flag, p_kiosk_location_desc, p_slip_no, p_crtd_by);
        }
        
        public System.Data.DataSet UpdateQ_ClickStatusQ_Nurse(string q_no, string q_status, string status_clinic_scanning, string status_send_clinic, string nurse_channel_comp_id, string nurse_user_id) {
            return base.Channel.UpdateQ_ClickStatusQ_Nurse(q_no, q_status, status_clinic_scanning, status_send_clinic, nurse_channel_comp_id, nurse_user_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdateQ_ClickStatusQ_NurseAsync(string q_no, string q_status, string status_clinic_scanning, string status_send_clinic, string nurse_channel_comp_id, string nurse_user_id) {
            return base.Channel.UpdateQ_ClickStatusQ_NurseAsync(q_no, q_status, status_clinic_scanning, status_send_clinic, nurse_channel_comp_id, nurse_user_id);
        }
        
        public System.Data.DataSet UpdateQ_SlipSeq(string p_q_id, string p_slip_seq) {
            return base.Channel.UpdateQ_SlipSeq(p_q_id, p_slip_seq);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UpdateQ_SlipSeqAsync(string p_q_id, string p_slip_seq) {
            return base.Channel.UpdateQ_SlipSeqAsync(p_q_id, p_slip_seq);
        }
    }
}
